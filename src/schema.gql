# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  name: String!
  email: String!
  password: String!

  """Age of user"""
  age: Int!
  posts(args: FindUserPostsByUserIdArgs!): [Post!]
}

input FindUserPostsByUserIdArgs {
  """select quantity to get of database"""
  quantity: Float = 6

  """number to jump rows on query results in database"""
  skip: Float!
  mostRecent: Boolean = true
}

type Token {
  token: String!
}

type CreateUser {
  email: String!
  name: String!
  age: Int!
}

type Post {
  id: Int!
  title: String!
  content: String!
  created_at: DateTime!
  updated_at: DateTime!
  creator: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Content {
  content: String!
}

type Query {
  users: [User!]!
  user: User!
  posts(args: FindAllPostArgs!): [Post!]!
  post(args: FindUniquePostByIdArgs!): Post!
}

input FindAllPostArgs {
  """number to jump rows on query results in database"""
  skip: Float!

  """select quantity to get of database"""
  quantity: Float!

  """include creators of posts"""
  includeCreators: Boolean! = false
}

input FindUniquePostByIdArgs {
  id: Float!
}

type Mutation {
  createPost(dto: CreatePostDtoInfra!): Post
  createUser(dto: CreateUserDtoInfra!): CreateUser
  login(dto: LoginDto!): Token!
}

input CreatePostDtoInfra {
  title: String!
  content: String!
}

input CreateUserDtoInfra {
  email: String!
  name: String!
  password: String!
  age: Int!
}

input LoginDto {
  email: String!
  password: String!
}

type Subscription {
  returnNewPostForSubscribers: Content!
}